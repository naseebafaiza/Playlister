{"ast":null,"code":"var _jsxFileName = \"/Users/naseebafaiza/Desktop/Playlister/Playlister_HW4_Solution/client/src/components/WorkspaceScreen.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SongCard from './SongCard.js';\nimport MUIEditSongModal from './MUIEditSongModal';\nimport MUIRemoveSongModal from './MUIRemoveSongModal';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport { GlobalStoreContext } from '../store/index.js';\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkspaceScreen() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n  let modalJSX = \"\";\n  if (store.isEditSongModalOpen()) {\n    modalJSX = /*#__PURE__*/_jsxDEV(MUIEditSongModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 20\n    }, this);\n  } else if (store.isRemoveSongModalOpen()) {\n    modalJSX = /*#__PURE__*/_jsxDEV(MUIRemoveSongModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"list-selector-list\",\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      id: \"playlist-cards\",\n      sx: {\n        overflow: 'scroll',\n        height: '87%',\n        width: '100%',\n        bgcolor: '#8000F00F'\n      },\n      children: store.currentList.songs.map((song, index) => /*#__PURE__*/_jsxDEV(SongCard, {\n        id: 'playlist-song-' + index,\n        index: index,\n        song: song\n      }, 'playlist-song-' + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), modalJSX]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(WorkspaceScreen, \"4OxDS/MBxgihbUmN8AlIaPl6MU0=\", false, function () {\n  return [useHistory];\n});\n_c = WorkspaceScreen;\nexport default WorkspaceScreen;\nvar _c;\n$RefreshReg$(_c, \"WorkspaceScreen\");","map":{"version":3,"names":["useContext","useHistory","SongCard","MUIEditSongModal","MUIRemoveSongModal","Box","List","GlobalStoreContext","WorkspaceScreen","store","history","modalJSX","isEditSongModalOpen","isRemoveSongModalOpen","overflow","height","width","bgcolor","currentList","songs","map","song","index"],"sources":["/Users/naseebafaiza/Desktop/Playlister/Playlister_HW4_Solution/client/src/components/WorkspaceScreen.js"],"sourcesContent":["import { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport SongCard from './SongCard.js'\nimport MUIEditSongModal from './MUIEditSongModal'\nimport MUIRemoveSongModal from './MUIRemoveSongModal'\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport { GlobalStoreContext } from '../store/index.js'\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction WorkspaceScreen() {\n    const { store } = useContext(GlobalStoreContext);\n    store.history = useHistory();\n    \n    let modalJSX = \"\";\n    if (store.isEditSongModalOpen()) {\n        modalJSX = <MUIEditSongModal />;\n    }\n    else if (store.isRemoveSongModalOpen()) {\n        modalJSX = <MUIRemoveSongModal />;\n    }\n    return (\n        <Box id=\"list-selector-list\">\n        <List \n            id=\"playlist-cards\" \n            sx={{overflow: 'scroll', height: '87%', width: '100%', bgcolor: '#8000F00F'}}\n        >\n            {\n                store.currentList.songs.map((song, index) => (\n                    <SongCard\n                        id={'playlist-song-' + (index)}\n                        key={'playlist-song-' + (index)}\n                        index={index}\n                        song={song}\n                    />\n                ))  \n            }\n         </List>            \n         { modalJSX }\n         </Box>\n    )\n}\n\nexport default WorkspaceScreen;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,eAAe,GAAG;EAAA;EACvB,MAAM;IAAEC;EAAM,CAAC,GAAGT,UAAU,CAACO,kBAAkB,CAAC;EAChDE,KAAK,CAACC,OAAO,GAAGT,UAAU,EAAE;EAE5B,IAAIU,QAAQ,GAAG,EAAE;EACjB,IAAIF,KAAK,CAACG,mBAAmB,EAAE,EAAE;IAC7BD,QAAQ,gBAAG,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EACnC,CAAC,MACI,IAAIF,KAAK,CAACI,qBAAqB,EAAE,EAAE;IACpCF,QAAQ,gBAAG,QAAC,kBAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EACrC;EACA,oBACI,QAAC,GAAG;IAAC,EAAE,EAAC,oBAAoB;IAAA,wBAC5B,QAAC,IAAI;MACD,EAAE,EAAC,gBAAgB;MACnB,EAAE,EAAE;QAACG,QAAQ,EAAE,QAAQ;QAAEC,MAAM,EAAE,KAAK;QAAEC,KAAK,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAW,CAAE;MAAA,UAGzER,KAAK,CAACS,WAAW,CAACC,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpC,QAAC,QAAQ;QACL,EAAE,EAAE,gBAAgB,GAAIA,KAAO;QAE/B,KAAK,EAAEA,KAAM;QACb,IAAI,EAAED;MAAK,GAFN,gBAAgB,GAAIC,KAAM;QAAA;QAAA;QAAA;MAAA,QAItC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEF,EACLX,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf;AAAC,GA/BQH,eAAe;EAAA,QAEJP,UAAU;AAAA;AAAA,KAFrBO,eAAe;AAiCxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}